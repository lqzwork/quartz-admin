<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns = "http://www.springframework.org/schema/beans" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context = "http://www.springframework.org/schema/context"
       xmlns:mvc = "http://www.springframework.org/schema/mvc"
       xmlns:aop = "http://www.springframework.org/schema/aop"
       xsi:schemaLocation = "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- 启用spring mvc 注解 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean -->
    <mvc:annotation-driven/>

    <!-- ①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能-->
    <context:component-scan base-package = "com.ffxl.quartz.*"/>

    <!-- 配置使Spring采用CGLIB代理 -->
    <aop:aspectj-autoproxy/>

    <!-- 初始化springUtils -->
    <bean id = "springUtils" class = "com.ffxl.quartz.task.SpringUtils"/>
    <!-- 初始化Scheduler -->
    <bean id = "schedulerFactoryBean" class = "org.springframework.scheduling.quartz.SchedulerFactoryBean"/>
    <!-- 初始化job  -->
    <bean id = "initQuartzJob" class = "com.ffxl.quartz.init.InitQuartzJob" init-method = "init" lazy-init = "false"/>


    <!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 ,
    				处理请求response返回值，如下配置能正确返回字符串型返回值,如返回值为对象，则自动转为json -->
    <bean id = "handleAdapter" class = "org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name = "messageConverters">
            <list>
                <ref bean = "mappingJacksonHttpMessageConverter"/><!-- json转换器 -->
                <ref bean = "mappingStringHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id = "mappingJacksonHttpMessageConverter"
          class = "org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
    <bean id = "mappingStringHttpMessageConverter"
          class = "org.springframework.http.converter.StringHttpMessageConverter"/>
</beans> 